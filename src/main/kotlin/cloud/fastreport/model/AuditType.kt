/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package cloud.fastreport.model


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * Values: taskCreatedExportTemplate,taskCreatedExportReport,taskCreatedPrepareTemplate,taskCreatedFetch,taskCreatedEmail,taskCreatedWebhook,taskDeletedExportTemplate,taskDeletedExportReport,taskDeletedPrepareTemplate,taskDeletedFetch,taskDeletedEmail,taskDeletedWebhook,taskUpdatedExportTemplate,taskUpdatedExportReport,taskUpdatedPrepareTemplate,taskUpdatedFetch,taskUpdatedEmail,taskUpdatedWebhook,taskInQueueExportTemplate,taskInQueueExportReport,taskInQueuePrepareTemplate,taskInQueueFetch,taskInQueueEmail,taskInQueueWebhook,taskInProcessExportTemplate,taskInProcessExportReport,taskInProcessPrepareTemplate,taskInProcessFetch,taskInProcessEmail,taskInProcessWebhook,taskSuccessExportTemplate,taskSuccessExportReport,taskSuccessPrepareTemplate,taskSuccessFetch,taskSuccessEmail,taskSuccessWebhook,taskFailedExportTemplate,taskFailedExportReport,taskFailedPrepareTemplate,taskFailedFetch,taskFailedEmail,taskFailedWebhook,taskCreatedThumbnailReport,taskDeletedThumbnailReport,taskUpdatedThumbnailReport,taskInQueueThumbnailReport,taskInProcessThumbnailReport,taskSuccessThumbnailReport,taskFailThumbnailReport,taskCreatedThumbnailTemplate,taskDeletedThumbnailTemplate,taskUpdatedThumbnailTemplate,taskInQueueThumbnailTemplate,taskInProcessThumbnailTemplate,taskSuccessThumbnailTemplate,taskFailThumbnailTemplate,subscriptionRenewed,subscriptionCreated,fileRenamed,fileContentUpdated,fileDeleted,fileMoved,fileCopied,fileTagsUpdated,filePermissionsUpdated,fileRestored,fileMovedToBin,fileUpdated,taskCreatedFTPUpload,taskDeletedFTPUpload,taskUpdatedFTPUpload,taskInQueueFTPUpload,taskInProcessFTPUpload,taskSuccessFTPUpload,taskFailFTPUpload,fileCreated
 */

@JsonClass(generateAdapter = false)
enum class AuditType(val value: kotlin.String) {

    @Json(name = "Task_Created_ExportTemplate")
    taskCreatedExportTemplate("Task_Created_ExportTemplate"),

    @Json(name = "Task_Created_ExportReport")
    taskCreatedExportReport("Task_Created_ExportReport"),

    @Json(name = "Task_Created_PrepareTemplate")
    taskCreatedPrepareTemplate("Task_Created_PrepareTemplate"),

    @Json(name = "Task_Created_Fetch")
    taskCreatedFetch("Task_Created_Fetch"),

    @Json(name = "Task_Created_Email")
    taskCreatedEmail("Task_Created_Email"),

    @Json(name = "Task_Created_Webhook")
    taskCreatedWebhook("Task_Created_Webhook"),

    @Json(name = "Task_Deleted_ExportTemplate")
    taskDeletedExportTemplate("Task_Deleted_ExportTemplate"),

    @Json(name = "Task_Deleted_ExportReport")
    taskDeletedExportReport("Task_Deleted_ExportReport"),

    @Json(name = "Task_Deleted_PrepareTemplate")
    taskDeletedPrepareTemplate("Task_Deleted_PrepareTemplate"),

    @Json(name = "Task_Deleted_Fetch")
    taskDeletedFetch("Task_Deleted_Fetch"),

    @Json(name = "Task_Deleted_Email")
    taskDeletedEmail("Task_Deleted_Email"),

    @Json(name = "Task_Deleted_Webhook")
    taskDeletedWebhook("Task_Deleted_Webhook"),

    @Json(name = "Task_Updated_ExportTemplate")
    taskUpdatedExportTemplate("Task_Updated_ExportTemplate"),

    @Json(name = "Task_Updated_ExportReport")
    taskUpdatedExportReport("Task_Updated_ExportReport"),

    @Json(name = "Task_Updated_PrepareTemplate")
    taskUpdatedPrepareTemplate("Task_Updated_PrepareTemplate"),

    @Json(name = "Task_Updated_Fetch")
    taskUpdatedFetch("Task_Updated_Fetch"),

    @Json(name = "Task_Updated_Email")
    taskUpdatedEmail("Task_Updated_Email"),

    @Json(name = "Task_Updated_Webhook")
    taskUpdatedWebhook("Task_Updated_Webhook"),

    @Json(name = "Task_InQueue_ExportTemplate")
    taskInQueueExportTemplate("Task_InQueue_ExportTemplate"),

    @Json(name = "Task_InQueue_ExportReport")
    taskInQueueExportReport("Task_InQueue_ExportReport"),

    @Json(name = "Task_InQueue_PrepareTemplate")
    taskInQueuePrepareTemplate("Task_InQueue_PrepareTemplate"),

    @Json(name = "Task_InQueue_Fetch")
    taskInQueueFetch("Task_InQueue_Fetch"),

    @Json(name = "Task_InQueue_Email")
    taskInQueueEmail("Task_InQueue_Email"),

    @Json(name = "Task_InQueue_Webhook")
    taskInQueueWebhook("Task_InQueue_Webhook"),

    @Json(name = "Task_InProcess_ExportTemplate")
    taskInProcessExportTemplate("Task_InProcess_ExportTemplate"),

    @Json(name = "Task_InProcess_ExportReport")
    taskInProcessExportReport("Task_InProcess_ExportReport"),

    @Json(name = "Task_InProcess_PrepareTemplate")
    taskInProcessPrepareTemplate("Task_InProcess_PrepareTemplate"),

    @Json(name = "Task_InProcess_Fetch")
    taskInProcessFetch("Task_InProcess_Fetch"),

    @Json(name = "Task_InProcess_Email")
    taskInProcessEmail("Task_InProcess_Email"),

    @Json(name = "Task_InProcess_Webhook")
    taskInProcessWebhook("Task_InProcess_Webhook"),

    @Json(name = "Task_Success_ExportTemplate")
    taskSuccessExportTemplate("Task_Success_ExportTemplate"),

    @Json(name = "Task_Success_ExportReport")
    taskSuccessExportReport("Task_Success_ExportReport"),

    @Json(name = "Task_Success_PrepareTemplate")
    taskSuccessPrepareTemplate("Task_Success_PrepareTemplate"),

    @Json(name = "Task_Success_Fetch")
    taskSuccessFetch("Task_Success_Fetch"),

    @Json(name = "Task_Success_Email")
    taskSuccessEmail("Task_Success_Email"),

    @Json(name = "Task_Success_Webhook")
    taskSuccessWebhook("Task_Success_Webhook"),

    @Json(name = "Task_Failed_ExportTemplate")
    taskFailedExportTemplate("Task_Failed_ExportTemplate"),

    @Json(name = "Task_Failed_ExportReport")
    taskFailedExportReport("Task_Failed_ExportReport"),

    @Json(name = "Task_Failed_PrepareTemplate")
    taskFailedPrepareTemplate("Task_Failed_PrepareTemplate"),

    @Json(name = "Task_Failed_Fetch")
    taskFailedFetch("Task_Failed_Fetch"),

    @Json(name = "Task_Failed_Email")
    taskFailedEmail("Task_Failed_Email"),

    @Json(name = "Task_Failed_Webhook")
    taskFailedWebhook("Task_Failed_Webhook"),

    @Json(name = "Task_Created_ThumbnailReport")
    taskCreatedThumbnailReport("Task_Created_ThumbnailReport"),

    @Json(name = "Task_Deleted_ThumbnailReport")
    taskDeletedThumbnailReport("Task_Deleted_ThumbnailReport"),

    @Json(name = "Task_Updated_ThumbnailReport")
    taskUpdatedThumbnailReport("Task_Updated_ThumbnailReport"),

    @Json(name = "Task_InQueue_ThumbnailReport")
    taskInQueueThumbnailReport("Task_InQueue_ThumbnailReport"),

    @Json(name = "Task_InProcess_ThumbnailReport")
    taskInProcessThumbnailReport("Task_InProcess_ThumbnailReport"),

    @Json(name = "Task_Success_ThumbnailReport")
    taskSuccessThumbnailReport("Task_Success_ThumbnailReport"),

    @Json(name = "Task_Fail_ThumbnailReport")
    taskFailThumbnailReport("Task_Fail_ThumbnailReport"),

    @Json(name = "Task_Created_ThumbnailTemplate")
    taskCreatedThumbnailTemplate("Task_Created_ThumbnailTemplate"),

    @Json(name = "Task_Deleted_ThumbnailTemplate")
    taskDeletedThumbnailTemplate("Task_Deleted_ThumbnailTemplate"),

    @Json(name = "Task_Updated_ThumbnailTemplate")
    taskUpdatedThumbnailTemplate("Task_Updated_ThumbnailTemplate"),

    @Json(name = "Task_InQueue_ThumbnailTemplate")
    taskInQueueThumbnailTemplate("Task_InQueue_ThumbnailTemplate"),

    @Json(name = "Task_InProcess_ThumbnailTemplate")
    taskInProcessThumbnailTemplate("Task_InProcess_ThumbnailTemplate"),

    @Json(name = "Task_Success_ThumbnailTemplate")
    taskSuccessThumbnailTemplate("Task_Success_ThumbnailTemplate"),

    @Json(name = "Task_Fail_ThumbnailTemplate")
    taskFailThumbnailTemplate("Task_Fail_ThumbnailTemplate"),

    @Json(name = "Subscription_Renewed")
    subscriptionRenewed("Subscription_Renewed"),

    @Json(name = "Subscription_Created")
    subscriptionCreated("Subscription_Created"),

    @Json(name = "File_Renamed")
    fileRenamed("File_Renamed"),

    @Json(name = "File_Content_Updated")
    fileContentUpdated("File_Content_Updated"),

    @Json(name = "File_Deleted")
    fileDeleted("File_Deleted"),

    @Json(name = "File_Moved")
    fileMoved("File_Moved"),

    @Json(name = "File_Copied")
    fileCopied("File_Copied"),

    @Json(name = "File_Tags_Updated")
    fileTagsUpdated("File_Tags_Updated"),

    @Json(name = "File_Permissions_Updated")
    filePermissionsUpdated("File_Permissions_Updated"),

    @Json(name = "File_Restored")
    fileRestored("File_Restored"),

    @Json(name = "File_MovedToBin")
    fileMovedToBin("File_MovedToBin"),

    @Json(name = "File_Updated")
    fileUpdated("File_Updated"),

    @Json(name = "Task_Created_FTPUpload")
    taskCreatedFTPUpload("Task_Created_FTPUpload"),

    @Json(name = "Task_Deleted_FTPUpload")
    taskDeletedFTPUpload("Task_Deleted_FTPUpload"),

    @Json(name = "Task_Updated_FTPUpload")
    taskUpdatedFTPUpload("Task_Updated_FTPUpload"),

    @Json(name = "Task_InQueue_FTPUpload")
    taskInQueueFTPUpload("Task_InQueue_FTPUpload"),

    @Json(name = "Task_InProcess_FTPUpload")
    taskInProcessFTPUpload("Task_InProcess_FTPUpload"),

    @Json(name = "Task_Success_FTPUpload")
    taskSuccessFTPUpload("Task_Success_FTPUpload"),

    @Json(name = "Task_Fail_FTPUpload")
    taskFailFTPUpload("Task_Fail_FTPUpload"),

    @Json(name = "File_Created")
    fileCreated("File_Created");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is AuditType) "$data" else null

        /**
         * Returns a valid [AuditType] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): AuditType? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

